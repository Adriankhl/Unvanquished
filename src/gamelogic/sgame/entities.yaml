general:
    common_entity_attributes:
        - name: oldEnt
          type: struct gentity_s*

messages:
    # Make all components export their networked state.
    PrepareNetCode:

    # Sent unconditionally once every frame.
    Think:
        - name: timeDelta
          type: int

    FreeAt:
        - name: freeTime
          type: int

    Ignite:
        - name: fireStarter
          type: gentity_t*

    Extinguish:
        - name: immunityTime
          type: int

    Heal:
        - name: amount
          type: float
        - name: source
          type: gentity_t*

    Damage:
        - name: amount
          type: float
        - name: source
          type: gentity_t*
        - name: location
          type: Util::optional<Vec3>
        - name: direction
          type: Util::optional<Vec3>
        - name: flags
          type: int
        - name: meansOfDeath
          type: meansOfDeath_t

    Die:
        - name: killer
          type: gentity_t*
        - name: meansOfDeath
          type: meansOfDeath_t

    ApplyDamageModifier:
        - name: damage
          type: float&
        - name: location
          type: Util::optional<Vec3>
        - name: direction
          type: Util::optional<Vec3>
        - name: flags
          type: int
        - name: meansOfDeath
          type: meansOfDeath_t

components:
    DeferredFreeing:
        messages:
            - FreeAt

    Client:
        parameters:
            clientData: gclient_t*

    Ignitable:
        parameters:
            freeOnExtinguish: bool
        defaults:
            freeOnExtinguish: false
        messages:
            - PrepareNetCode
            - Think
            - Ignite
            - Extinguish

    Health:
        parameters:
            maxHealth: float
        messages:
            - PrepareNetCode
            - Heal
            - Damage

    # TODO: Get rid of dependency on gentity_t.client. Depend on
    #       PhysicsComponent instead.
    Armor:
        messages:
            - ApplyDamageModifier

    # TODO: Get rid of dependency on gentity_t.client. Depend on
    #       PhysicsComponent instead.
    Knockback:
        messages:
            - Damage

    Buildable:
        messages:
            - PrepareNetCode
            - Die
        requires:
            - Health

    AlienBuildable:
        messages:
            - Damage
            - Die
        requires:
            - Buildable
            - Ignitable

    HumanBuildable:
        messages:
            - Die
        requires:
            - Buildable

    MainBuildable:
        messages:
            - Die
        requires:
            - Buildable

    Turret:
        messages:
            - Die

    Mining:
        messages:
            - PrepareNetCode
            - Die


    ##############################
    # Entity-specific components #
    ##############################

    #AcidTube:

    Barricade:
        messages:
            - Damage
            - Die
        requires:
            # TODO: Check if this lets us override animations reliably.
            - AlienBuildable

    #Booster:
    #Egg:

    Hive:
        messages:
            - Damage
        requires:
            - AlienBuildable

    #Leech:

    Overmind:
        messages:
            - Die
        requires:
            - AlienBuildable
            - MainBuildable

    Spiker:
        messages:
            - Damage
        requires:
            - AlienBuildable

    #Trapper:
    #Armoury:
    #Drill:

    Medipad:
        messages:
            - Die
        requires:
            - HumanBuildable

    #MGTurret:

    Reactor:
        messages:
            - Die
        requires:
            - HumanBuildable
            - MainBuildable

    #Repeater:
    #Rocketpod:
    #Telenode:

entities:
    ###################
    # Pseudo entities #
    ###################

    Empty:
        components:

    # A generic client entity, not spawned yet.
    # TODO: Evaluate if HealthComponent is needed.
    Client:
        components:
            Client:
            Health:
                maxHealth: 1

    ##################
    # Player classes #
    ##################

    Dretch:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    Mantis:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    Marauder:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    AdvMarauder:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    Dragoon:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    AdvDragoon:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    Tyrant:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    Granger:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    AdvGranger:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    NakedHuman:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    LightHuman:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    MediumHuman:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    HeavyHuman:
        components:
            Client:
            Health:
            Armor:
            Knockback:

    ##############
    # Buildables #
    ##############

    AcidTube:
        components:
            AlienBuildable:

    Barricade:
        components:
            Barricade:

    Booster:
        components:
            AlienBuildable:

    Egg:
        components:
            AlienBuildable:

    Hive:
        components:
            Hive:

    Leech:
        components:
            AlienBuildable:
            Mining:

    Overmind:
        components:
            Overmind:

    Spiker:
        components:
            Spiker:

    Trapper:
        components:
            AlienBuildable:

    Armoury:
        components:
            HumanBuildable:

    Drill:
        components:
            HumanBuildable:
            Mining:

    Medipad:
        components:
            Medipad:

    MGTurret:
        components:
            HumanBuildable:
            Turret:

    Reactor:
        components:
            Reactor:

    Repeater:
        components:
            HumanBuildable:

    Rocketpod:
        components:
            HumanBuildable:
            Turret:

    Telenode:
        components:
            HumanBuildable:

    ############
    # Unsorted #
    ############

    Fire:
        components:
            Ignitable:
                freeOnExtinguish: true
            DeferredFreeing:

# vi:ts=4:et:ai
